# CircleCI configuration file
version: 2.1

## --- shared pieces of code 

# example of single command
print_pipeline_id: &print_pipeline_id
  run: echo "pipeline id $CIRCLE_WORKFLOW_ID"
# example of multiple commands - not working as expected 
print_job_frame: &print_job_frame
  - run: echo "--- 1.step"
  - run: echo "step description"
  - run: echo "----------"

## -------------------

commands:

  print_header:
    parameters:
      number_of_step:
        # string, boolean, integer, enum 
        type: integer
        default: 1
    steps:
      - run: echo "--- << parameters.number_of_step >>.step"

  print_footer:
    steps:
      - run: echo "----------"

jobs:
  # execute command inside container
  print_hello:
    docker:
      - image: cimg/base:2022.05
    steps:
      - run: echo "--- 1.step"
      - run: echo "hello"
      - run: echo "----------"

  # use built in variables for creating environment variables
  print_world:
    docker:
     - image: cimg/base:2022.05
    environment:
      CUSTOM_MESSAGE: "<< pipeline.project.git_url >> :: << pipeline.trigger_parameters.gitlab.commit_message>>"
    steps:
      - run: 
          name: print world
          command: | 
            echo "--- 2.step"
            echo "world $CUSTOM_MESSAGE"
            echo "value from UI: $UI_ENV_VAR "
            echo "----------"
  
  # save results of work in workspace
  save_result_to_workspace:
    docker:
      - image: cimg/base:2022.05
    steps:
      - run:
          name: create file in workspace
          command: |
            # folder must be created !!!
            mkdir workspace 
            echo "-- 3.step"
            echo "third job value" > workspace/third-job.output.txt
            echo "---------"
      # position of persistent - after file and directory creation
      - persist_to_workspace:
          root: workspace
          paths:
            - third-job.output.txt
  
  # attach ( R/O ) results of previous work to job 
  read_result_from_workspace:
    docker:
      - image: cimg/base:2022.05
    steps:
      # workspace should be attached BEFORE reading
      - attach_workspace:
          at: workspace_shared
      - run:
          name: read content of file from shared workspace
          command: |
            echo "-- 4.step"
            cat workspace_shared/third-job.output.txt
            echo "---------"
    
  # re-using command with yaml anchor: print_pipeline_id
  reuse_command:
    docker:
      - image: cimg/base:2022.05
    steps:
      - print_header:
          number_of_step: 5
      - <<: *print_pipeline_id
      # !!! will execute only first command from the list
      - <<: *print_job_frame 
      - print_footer 

workflows:
  # Name of workflow
  my_workflow_1:
    jobs:
      - print_hello
      - print_world:
          requires: 
            - print_hello
      - save_result_to_workspace
      - read_result_from_workspace:
          requires:
            - save_result_to_workspace
      - reuse_command
